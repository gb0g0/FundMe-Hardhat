{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xcc26f2e8914efc07b4f055b24fc738d6f3387716ec74b1a6d34d49cc091cc0e1",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "827584",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x2d481237aea19a21f4060ab240ce973e0845d6a85cdb92a11d469ee3563e5242",
    "transactionHash": "0xcc26f2e8914efc07b4f055b24fc738d6f3387716ec74b1a6d34d49cc091cc0e1",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "827584",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "83ec19b91894b5fb7252c108b3472f3f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// Get funds from user\\r\\n// Withdraw funds\\r\\n// Set a minimum funding value in USD\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\n// /**\\r\\n//  * @title A contract for crowd funding\\r\\n//  * @author oluwagbogo\\r\\n//  * @notice this contract is a decentralized funds payment\\r\\n//  */\\r\\nerror FundMe__NotOwner();\\r\\n\\r\\ncontract FundMe {\\r\\n    //Type Decleractions\\r\\n    using priceConverter for uint256;\\r\\n\\r\\n    //state variable\\r\\n    // uint256 public number;\\r\\n    uint256 public MINIMUM_USD = 50 * 1e18;\\r\\n    address[] public funders;\\r\\n    mapping(address => uint) addressToAmountFunded;\\r\\n    address public owner;\\r\\n    AggregatorV3Interface public s_priceFeed;\\r\\n\\r\\n    // Modifiers\\r\\n    modifier onlyOwner() {\\r\\n    // require(msg.sender == owner, \\\"sender is not owner!\\\");\\r\\n    if (msg.sender != owner) {\\r\\n        revert FundMe__NotOwner();\\r\\n    }\\r\\n    _;\\r\\n    }\\r\\n    constructor(address priceFeedAddress) {\\r\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n        owner = msg.sender;\\r\\n    }\\r\\n\\r\\n    function fund() public payable {\\r\\n        // we wan to be able to set a minimum fund amount in USD\\r\\n        // 1. how do we send eth to this contract\\r\\n        // number = 5;\\r\\n        // require(getConversionRate(msg.value) >= minimumUsd, \\\"Don't send enough\\\"); // 1e18 == 1*10**18 == 1000000000000000000\\r\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"Don't send enough\\\"); // 1e18 == 1*10**18 == 1000000000000000000\\r\\n        // 18 decimals\\r\\n        funders.push(msg.sender);\\r\\n        addressToAmountFunded[msg.sender] += msg.value;\\r\\n    }\\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n        for (\\r\\n            uint256 funderIndex = 0;\\r\\n            funderIndex < funders.length;\\r\\n            funderIndex++\\r\\n        ) {\\r\\n            address funder = funders[funderIndex];\\r\\n            addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        // resting an array\\r\\n        funders = new address[](0);\\r\\n        // actually withdraw the funds\\r\\n\\r\\n        // //transfer\\r\\n        // payable(msg.sender).transfer(address(this).balance);\\r\\n        // //send\\r\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\r\\n        // require(sendSuccess, 'Send failed');\\r\\n        // //call\\r\\n        (bool callSucess, ) = payable(msg.sender).call{\\r\\n            value: address(this).balance\\r\\n        }(\\\"\\\");\\r\\n        require(callSucess, \\\"call failed\\\");\\r\\n    }\\r\\n\\r\\n\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        fund();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x6f3eb965e8b4e3eb3318474587d2dca3391cabcf36f02a4f99a48934b8662379\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\" // SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary priceConverter {\\r\\n\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256){\\r\\n        // ABI\\r\\n        // Address\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        // ETH in terms of USD\\r\\n        // 1500.00000000\\r\\n        return uint256(answer * 1e10); // 1**10 = 1000000000\\r\\n    }\\r\\n\\r\\n    // function getVersion() internal view returns (uint256) {\\r\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface( 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e );\\r\\n    //     return priceFeed.version();\\r\\n    // }\\r\\n\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns(uint256){\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        // from getPrice() 1500_000000000000000000 = ETH/USD Price\\r\\n        // from value 1_000000000000000000 = number of ETH the user is sending\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount)/ 1e18;\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xf1ddd68d5eafde49f2f65ecae92cfbb712e9fcae50db1c483acf8145448482d8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526802b5e3af16b188000060005534801561001d57600080fd5b50604051610e2b380380610e2b833981810160405281019061003f919061012a565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610157565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100f7826100cc565b9050919050565b610107816100ec565b811461011257600080fd5b50565b600081519050610124816100fe565b92915050565b6000602082840312156101405761013f6100c7565b5b600061014e84828501610115565b91505092915050565b610cc5806101666000396000f3fe6080604052600436106100595760003560e01c80630ec3b027146100725780633ccfd60b1461009d5780636b69a592146100b45780638da5cb5b146100df578063b60d42881461010a578063dc0d3dff1461011457610068565b3661006857610066610151565b005b610070610151565b005b34801561007e57600080fd5b50610087610285565b604051610094919061074c565b60405180910390f35b3480156100a957600080fd5b506100b26102ab565b005b3480156100c057600080fd5b506100c96104ee565b6040516100d69190610780565b60405180910390f35b3480156100eb57600080fd5b506100f46104f4565b60405161010191906107bc565b60405180910390f35b610112610151565b005b34801561012057600080fd5b5061013b60048036038101906101369190610808565b61051a565b60405161014891906107bc565b60405180910390f35b600054610189600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461055990919063ffffffff16565b10156101ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c190610892565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027c91906108e1565b92505081905550565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610332576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103de5760006001828154811061035857610357610915565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103d690610944565b915050610335565b50600067ffffffffffffffff8111156103fa576103f961098c565b5b6040519080825280602002602001820160405280156104285781602001602082028036833780820191505090505b506001908051906020019061043e929190610626565b5060003373ffffffffffffffffffffffffffffffffffffffff1647604051610465906109ec565b60006040518083038185875af1925050503d80600081146104a2576040519150601f19603f3d011682016040523d82523d6000602084013e6104a7565b606091505b50509050806104eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e290610a4d565b60405180910390fd5b50565b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061052a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061056583610595565b90506000670de0b6b3a7640000858361057e9190610a6d565b6105889190610ade565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156105e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106079190610b9c565b5050509150506402540be4008161061e9190610c17565b915050919050565b82805482825590600052602060002090810192821561069f579160200282015b8281111561069e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610646565b5b5090506106ac91906106b0565b5090565b5b808211156106c95760008160009055506001016106b1565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061071261070d610708846106cd565b6106ed565b6106cd565b9050919050565b6000610724826106f7565b9050919050565b600061073682610719565b9050919050565b6107468161072b565b82525050565b6000602082019050610761600083018461073d565b92915050565b6000819050919050565b61077a81610767565b82525050565b60006020820190506107956000830184610771565b92915050565b60006107a6826106cd565b9050919050565b6107b68161079b565b82525050565b60006020820190506107d160008301846107ad565b92915050565b600080fd5b6107e581610767565b81146107f057600080fd5b50565b600081359050610802816107dc565b92915050565b60006020828403121561081e5761081d6107d7565b5b600061082c848285016107f3565b91505092915050565b600082825260208201905092915050565b7f446f6e27742073656e6420656e6f756768000000000000000000000000000000600082015250565b600061087c601183610835565b915061088782610846565b602082019050919050565b600060208201905081810360008301526108ab8161086f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108ec82610767565b91506108f783610767565b925082820190508082111561090f5761090e6108b2565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061094f82610767565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610981576109806108b2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109d66000836109bb565b91506109e1826109c6565b600082019050919050565b60006109f7826109c9565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a37600b83610835565b9150610a4282610a01565b602082019050919050565b60006020820190508181036000830152610a6681610a2a565b9050919050565b6000610a7882610767565b9150610a8383610767565b9250828202610a9181610767565b91508282048414831517610aa857610aa76108b2565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ae982610767565b9150610af483610767565b925082610b0457610b03610aaf565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b2e81610b0f565b8114610b3957600080fd5b50565b600081519050610b4b81610b25565b92915050565b6000819050919050565b610b6481610b51565b8114610b6f57600080fd5b50565b600081519050610b8181610b5b565b92915050565b600081519050610b96816107dc565b92915050565b600080600080600060a08688031215610bb857610bb76107d7565b5b6000610bc688828901610b3c565b9550506020610bd788828901610b72565b9450506040610be888828901610b87565b9350506060610bf988828901610b87565b9250506080610c0a88828901610b3c565b9150509295509295909350565b6000610c2282610b51565b9150610c2d83610b51565b9250828202610c3b81610b51565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610c7357610c726108b2565b5b8282058414831517610c8857610c876108b2565b5b509291505056fea26469706673582212206a2acefe8e88f28cacfc523e5b583f35ea858636c6dacfdb5f1b4170673e550a64736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c80630ec3b027146100725780633ccfd60b1461009d5780636b69a592146100b45780638da5cb5b146100df578063b60d42881461010a578063dc0d3dff1461011457610068565b3661006857610066610151565b005b610070610151565b005b34801561007e57600080fd5b50610087610285565b604051610094919061074c565b60405180910390f35b3480156100a957600080fd5b506100b26102ab565b005b3480156100c057600080fd5b506100c96104ee565b6040516100d69190610780565b60405180910390f35b3480156100eb57600080fd5b506100f46104f4565b60405161010191906107bc565b60405180910390f35b610112610151565b005b34801561012057600080fd5b5061013b60048036038101906101369190610808565b61051a565b60405161014891906107bc565b60405180910390f35b600054610189600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461055990919063ffffffff16565b10156101ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c190610892565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027c91906108e1565b92505081905550565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610332576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103de5760006001828154811061035857610357610915565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103d690610944565b915050610335565b50600067ffffffffffffffff8111156103fa576103f961098c565b5b6040519080825280602002602001820160405280156104285781602001602082028036833780820191505090505b506001908051906020019061043e929190610626565b5060003373ffffffffffffffffffffffffffffffffffffffff1647604051610465906109ec565b60006040518083038185875af1925050503d80600081146104a2576040519150601f19603f3d011682016040523d82523d6000602084013e6104a7565b606091505b50509050806104eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e290610a4d565b60405180910390fd5b50565b60005481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061052a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061056583610595565b90506000670de0b6b3a7640000858361057e9190610a6d565b6105889190610ade565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156105e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106079190610b9c565b5050509150506402540be4008161061e9190610c17565b915050919050565b82805482825590600052602060002090810192821561069f579160200282015b8281111561069e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610646565b5b5090506106ac91906106b0565b5090565b5b808211156106c95760008160009055506001016106b1565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061071261070d610708846106cd565b6106ed565b6106cd565b9050919050565b6000610724826106f7565b9050919050565b600061073682610719565b9050919050565b6107468161072b565b82525050565b6000602082019050610761600083018461073d565b92915050565b6000819050919050565b61077a81610767565b82525050565b60006020820190506107956000830184610771565b92915050565b60006107a6826106cd565b9050919050565b6107b68161079b565b82525050565b60006020820190506107d160008301846107ad565b92915050565b600080fd5b6107e581610767565b81146107f057600080fd5b50565b600081359050610802816107dc565b92915050565b60006020828403121561081e5761081d6107d7565b5b600061082c848285016107f3565b91505092915050565b600082825260208201905092915050565b7f446f6e27742073656e6420656e6f756768000000000000000000000000000000600082015250565b600061087c601183610835565b915061088782610846565b602082019050919050565b600060208201905081810360008301526108ab8161086f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108ec82610767565b91506108f783610767565b925082820190508082111561090f5761090e6108b2565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061094f82610767565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610981576109806108b2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b60006109d66000836109bb565b91506109e1826109c6565b600082019050919050565b60006109f7826109c9565b9150819050919050565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610a37600b83610835565b9150610a4282610a01565b602082019050919050565b60006020820190508181036000830152610a6681610a2a565b9050919050565b6000610a7882610767565b9150610a8383610767565b9250828202610a9181610767565b91508282048414831517610aa857610aa76108b2565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ae982610767565b9150610af483610767565b925082610b0457610b03610aaf565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610b2e81610b0f565b8114610b3957600080fd5b50565b600081519050610b4b81610b25565b92915050565b6000819050919050565b610b6481610b51565b8114610b6f57600080fd5b50565b600081519050610b8181610b5b565b92915050565b600081519050610b96816107dc565b92915050565b600080600080600060a08688031215610bb857610bb76107d7565b5b6000610bc688828901610b3c565b9550506020610bd788828901610b72565b9450506040610be888828901610b87565b9350506060610bf988828901610b87565b9250506080610c0a88828901610b3c565b9150509295509295909350565b6000610c2282610b51565b9150610c2d83610b51565b9250828202610c3b81610b51565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610c7357610c726108b2565b5b8282058414831517610c8857610c876108b2565b5b509291505056fea26469706673582212206a2acefe8e88f28cacfc523e5b583f35ea858636c6dacfdb5f1b4170673e550a64736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "MINIMUM_USD",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}